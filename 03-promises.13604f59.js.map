{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,kBAClCC,EAAUF,SAASC,cAAc,iBACjCE,EAAYH,SAASC,cAAc,mBAwBzC,SAASG,EAAcC,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IAEtBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE1BA,EAAM,G,CAGb,SAASQ,EAAST,EAAUC,GAC1BS,EAAAlB,GAASmB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,MAAW,CAE/DY,QAAS,K,CAGrB,SAASC,EAAQd,EAAUC,GACzBS,EAAAlB,GAASmB,OAAOC,QAAQ,sBAAoBZ,QAAeC,MAAW,CAE5DY,QAAS,K,CA9CLlB,SAASC,cAAc,SAE/BmB,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAQC,OAAOzB,EAAS0B,OACxBC,EAAOF,OAAOtB,EAAQuB,OACtBE,EAASH,OAAOrB,EAAUsB,OAChC,IAAIG,EAAcL,EAElB,IAAI,IAAIM,EAAE,EAAGA,GAAKF,EAAQE,IACxBzB,EAAcyB,EAAGD,GAChBE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBQ,EAAST,EAAUC,EAAM,IAE1ByB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBa,EAAQd,EAAUC,EAAM,IAE1BsB,GAAeF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayRef = document.querySelector('[name=\"delay\"]');\nconst stepRef = document.querySelector('[name=\"step\"]');\nconst amountRef = document.querySelector('[name=\"amount\"]');\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const DELAY = Number(delayRef.value);\n  const STEP = Number(stepRef.value);\n  const AMOUNT = Number(amountRef.value);\n  let stepCounter = DELAY;\n\n  for(let i=1; i <= AMOUNT; i++){\n    createPromise(i, stepCounter)\n    .then(({ position, delay }) => {\n      onSucces(position, delay);\n    })\n    .catch(({ position, delay }) => {\n      onError(position, delay);\n    });\n    stepCounter += STEP;\n  }\n}\n\nfunction createPromise(position, delay) {\n  \n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } \n      reject({ position, delay });\n      \n    }, delay)\n  })\n}\nfunction onSucces(position, delay){\n  Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 1000,\n          });\n}\nfunction onError(position, delay){\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 1000,\n          });\n}\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayRef","document","querySelector","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$amountRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onSucces","$parcel$interopDefault","Notify","failure","timeout","$47d4ff9957288465$var$onError","addEventListener","e","preventDefault","DELAY","Number","value","STEP","AMOUNT","stepCounter","i","then","catch"],"version":3,"file":"03-promises.13604f59.js.map"}